	you want to use emacs' -*- outline -*- mode, to read this ...

this file is some kind of TODO file, I use it to take down notes, what to
do, when and how ...

* first things first
** you're welcome to participate in progressing cvsfs4hurd
   if you got questions concerning it, don't hesitate but send me
   a mail to ssiegl@gmx.de

** cvsfs4hurd's code is real crap!
*** do you think so? please tell me what you don't like
    cvsfs4hurd is actually my first project, related to the
    Hurd and actually my first step towards OS-near programming.

** cvs_*.[ch] files should stay GNU Hurd independant
   that is, please use POSIX compatible code in those files to keep those
   portable. The other stuff (cvsfs.c, node.c, netfs.c at the time of this
   writing) is OS (aka Hurd) specific and probably needs to completely be
   rewritten when aiming to port to some other platform.

** source code documentation
   all functions in all of cvsfs4hurd's files should be well documented,
   this unfortunately isn't the case currently.  if you want to, you may
   supply some however.  when implementing new stuff, just write it first,
   so that won't happen in future ;)

* todos
** available stuff left to fix
*** urgent
**** expire revision contents to disk
     keep revision's content until translator's exit somewhere below /tmp
     with rather strict umask applied.

**** correctly handle timestamps
***** update atimes where necessary

*** things that can wait

** new features
   these are somewhat in order of urgency ...

*** support subversion as an alternate backend
*** write support
**** try layering unionsfs/shadowfs on top
     in order to e.g. 'make' in a source directory.  we probably have to fix
     timestamp handling, in order to make use of make, don't we?

     write some documentation on that.

**** supply <filenode>/commit node
     if user writes to there, use this message as loginfo.  As of now I guess
     write support is something really tricky, since we need to check-in the
     diff between the revision our user opened and the one she wrote ...

     maybe glance at Linux' cvsfs sources how they do it, if they do it et all
*** make loginfo accessible some way
    (<filenode>/history or something)

*** allow revision access like Linux' cvsfs does
    (using @@ appendixes)


jupp, enough for the time being ...
$Id: HACKING,v 1.7 2004/10/03 18:11:47 stesie Exp $